@inject HttpClient _client

<EditForm Model="@payment" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
    <div class="form-group">
        <label>Method:</label>
        <div>
            <InputText @bind-Value="@payment.Method" class="form-control" />
            <ValidationMessage For="@(() => payment.Method)" />
        </div>
    </div>
    </fieldset>
    @if (!Disabled)
    {
    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>
    }
    <BackToList Target="payments" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Payment payment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Order> Orders;

    protected async override Task OnInitializedAsync()
    {
        Orders = await _client.GetFromJsonAsync<List<Order>>($"{Endpoints.OrdersEndpoint}"); ;
    }
}