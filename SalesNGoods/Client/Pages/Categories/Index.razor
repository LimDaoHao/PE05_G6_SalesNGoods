@page "/categories/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Category List</h3>
<br />

@if (Categories == null)
{
    <div class="alert alert-info">Loading Products...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Type</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Type</td>
                    <td>
                        <a href="/categories/edit/@category.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(category.Id))">
                            <span class="oi oi-delete"></span>
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}





@code {
    private List<Category> Categories;

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

    async Task Delete(int CategoryId)
    {
        var category = Categories.First(q => q.Id == CategoryId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {category.Name}");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.CategoriesEndpoint}/{CategoryId}");
            await OnInitializedAsync();
        }
    }
}
